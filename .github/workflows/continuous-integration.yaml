name: continuous-integration
run-name: '[CI] ${{ github.event.head_commit.message }}${{ github.event.pull_request.title }} by @${{ github.actor }}'

on:
    push:
        branches: [main]
    pull_request:
        # The branches below must be a subset of the branches above
        branches: [main]

concurrency:
    group: 'continuous-integration-${{ github.ref }}'
    cancel-in-progress: true

jobs:
    commit-quality:
        name: '[CI] Commit quality'
        runs-on: ubuntu-latest
        steps:
            -
                name: '[GITHUB / OFFICIAL] Checkout'
                uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
                with:
                    fetch-depth: 0
            -
                name: '[OSS] Launch commitlint'
                uses: wagoid/commitlint-github-action@481aff4de4d0de6d28d05533d4230d298ea3377d # v5.3.0
                with:
                    configFile: '.commitlintrc.json'

    code-quality:
        name: '[CI] Code quality'
        runs-on: ubuntu-latest
        steps:
            -
                name: '[GITHUB / OFFICIAL] Checkout'
                uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
                with:
                    fetch-depth: 0
            -
                name: '[GITHUB / OSS] Lint Code Base'
                uses: github/super-linter@bb2d833b08b6c288608686672b93a8a4589cdc49 # version 4.9.7
                env:
                    DEFAULT_BRANCH: 'main'
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    JAVASCRIPT_DEFAULT_STYLE: 'prettier'
                    JAVASCRIPT_ES_CONFIG_FILE: '.eslintrc.json'
                    VALIDATE_ALL_CODEBASE: false
                    VALIDATE_CSS: true
                    VALIDATE_ENV: true
                    VALIDATE_GITHUB_ACTIONS: true
                    VALIDATE_GITLEAKS: true
                    VALIDATE_JAVASCRIPT_ES: true
                    VALIDATE_JAVASCRIPT_STANDARD: true
                    VALIDATE_MARKDOWN: true

    tests:
        needs: [commit-quality, code-quality]
        strategy:
            matrix:
                ARCHITECTURE: [x64]
                OS: [ubuntu-latest, macos-latest]
                NODE_VERSION: [14, 16, 18]
        name: '[CI] Node ${{ matrix.NODE_VERSION }} - ${{ matrix.ARCHITECTURE }} on ${{ matrix.OS }}'
        runs-on: ${{ matrix.OS }}
        steps:
            -
                name: '[GITHUB / OFFICIAL] Checkout'
                uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
            -
                name: '[INTERNAL] Install project & environment'
                uses: ./.github/actions/install
                with:
                    architecture: ${{ matrix.ARCHITECTURE }}
                    node-version: ${{ matrix.NODE_VERSION }}
            -
                name: '[For UbuntuOS] Install xvfb'
                if: matrix.OS == 'ubuntu-latest'
                run: sudo apt-get install xvfb
            -
                name: 'Launch build'
                shell: sh
                run: pnpm run build
            -
                name: '[For UbuntuOS] Launch test'
                if: matrix.OS == 'ubuntu-latest'
                shell: sh
                run: xvfb-run --auto-servernum pnpm run test
            -
                name: 'Launch test'
                if: matrix.OS != 'ubuntu-latest'
                shell: sh
                run: pnpm run test
